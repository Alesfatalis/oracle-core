name: Tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types:
      - opened
      - synchronize

env:
  RUSTV: 1.61

jobs:

  test:
    name: Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUSTV }}
          override: true
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch
      - name: Build tests
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --tests
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release
        
  test_coverage:
    name: Code coverage in tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUSTV }}
          override: true
      - name: rust-tarpaulin code coverage check
        uses: actions-rs/tarpaulin@master
        with:
          args: '--avoid-cfg-tarpaulin --timeout=360 -v --out Lcov'
      - name: Push code coverage results to coveralls.io
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info

  clippy:
    name: Clippy (linter)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUSTV }}
          components: clippy
          override: true
      - name: Check with Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -D warnings

  rustfmt:
    name: Code formatting (rustfmt)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUSTV }}
          components: rustfmt
          override: true
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check --color always
            
